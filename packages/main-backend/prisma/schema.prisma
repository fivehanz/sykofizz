// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator nestgraphql {
    // provider = "node node_modules/prisma-nestjs-graphql"
    // for yarn monorepos
    provider = "prisma-nestjs-graphql"
    output = "../src/@generated"
}

datasource db {
  // provider          = "postgresql"
  provider = "mongodb"
  url      = env("DATABASE_URL")
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId 
  email     String   @unique
  password  String
  name      String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
  Page      Page[]
}

// Define an enum to represent user roles
enum Role {
  ADMIN
  EDITOR
  AUTHOR
  USER
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  slug      String   @unique
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @db.ObjectId
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Page {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  slug      String   @unique
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
