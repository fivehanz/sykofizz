services:
  # nginx:
  #   image: nginx:stable
  #   container_name: hanz_dev_nginx_server
  #   restart: unless-stopped
  #   ports:
  #     - "8080:80"
  #   networks:
  #     - hanz-nw
  #   volumes:
  #     - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./deployment/nginx/vhost.dev.conf:/etc/nginx/conf.d/default.conf
  #     - ./media:/app/media
  #     - ./static:/app/static

  web:
    build:
      context: .
      dockerfile: dev.Dockerfile
    command: "python manage.py runserver 0.0.0.0:8000"
    restart: unless-stopped
    volumes:
      - ./:/app/src
    ports:
      - "8000:8000"
    networks:
      - sfizz-nw
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://user:password@db:5432/sfizz-db
      - REDIS_URL=redis://redis:6379/1
      - S3_ADDRESSING_STYLE=auto
      - RUN_MIGRATION=true
      - COLLECT_STATIC=true
    env_file:
      - .env

  remark42:
    image: umputun/remark42:v1.13.1
    restart: unless-stopped
    volumes:
      - remark42-data:/srv/var
    ports:
      - "8080:8080"
    networks:
      - sfizz-nw
    environment:
      - DEBUG=true
      - ADMIN_PASSWD=password
      - REMARK_URL=http://127.0.0.1:8080
      - SECRET=some-secret-key
    env_file:
      - .env

  # celery_worker:
  #   container_name: hanz_celery_worker
  #   build:
  #     context: .
  #     dockerfile: dev.Dockerfile
  #   command: celery -A hanz worker -l info
  #   volumes:
  #     - ./:/app/src
  #   environment:
  #     - DEBUG=1
  #     - DATABASE_URL=postgres://user:password@db:5432/hanz-db
  #   env_file:
  #     - .env
  #   networks:
  #     - hanz-nw
  #   depends_on:
  #     - db
  #     - redis
  #
  # celery_beat:
  #   container_name: hanz_celery_beat
  #   build:
  #     context: .
  #     dockerfile: dev.Dockerfile
  #   command: celery -A hanz beat -l info
  #   volumes:
  #     - ./:/app/src
  #   environment:
  #     - DEBUG=1
  #     - DATABASE_URL=postgres://user:password@db:5432/hanz-db
  #   env_file:
  #     - .env
  #   networks:
  #     - hanz-nw
  #   depends_on:
  #     - db
  #     - redis
  #
  # minio:
  #   image: quay.io/minio/minio
  #   container_name: hanz_dev_app_minio
  #   restart: unless-stopped
  #   networks:
  #     - hanz-nw
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   volumes:
  #     - ./dev_data/minio/data:/data
  #   env_file:
  #     - .env
  #   command: server /data --console-address ":9001"

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    networks:
      - sfizz-nw
    volumes:
      - sfizz-db-data:/var/lib/postgresql/db
    environment:
      - POSTGRES_DB=sfizz-db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - PGDATA=/var/lib/postgresql/db

  # redis:
  #   image: redis:7-alpine
  #   restart: unless-stopped
  #   networks:
  #     - sfizz-nw

networks:
  sfizz-nw:

volumes:
  sfizz-db-data:
  remark42-data:
