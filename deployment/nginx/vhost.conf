# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name sykofizz.com www.sykofizz.com monk.sykofizz.com;

    return 301 https://$host$request_uri;
}    

### sykofizz -- ghost cms ###
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name sykofizz.com www.sykofizz.com;

    ssl_certificate /opt/ssl/sykofizz.pem;
    ssl_certificate_key /opt/ssl/sykofizz.key;
    ssl_protocols TLSv1.3 TLSv1.2;

    # Add security headers
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;

    # HTTP/2 server push
    http2_push_preload on;

    # Connection keep-alive
    keepalive_timeout 65;

    location / {
      proxy_pass http://0.0.0.0:2368;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
}


### sykofizz -- listmonk newsletter, management ###
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name monk.sykofizz.com;

    ssl_certificate /opt/ssl/sykofizz.pem;
    ssl_certificate_key /opt/ssl/sykofizz.key;
    ssl_protocols TLSv1.3 TLSv1.2;

    # Add security headers
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;

    # HTTP/2 server push
    http2_push_preload on;

    # Connection keep-alive
    keepalive_timeout 65;
    
    location / {
      proxy_pass http://0.0.0.0:9000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
}

